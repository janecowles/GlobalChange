summary(modbytrtrecent10year)$tTable
Anova(modbytrtrecent10year)
Anova(modbytrtrecent10year)
modbytrtrecent10year <- lme(AbovegroundTotal.Biomass..g.m.2 ~ Richness*MeanRankBYTrtrecent10year_levels*CO2*Ntrt*year,random = ~1|Ring/Plot,correlation = corAR1(form = ~ 1 | Ring/Plot),data=e141_fin)
modrecent10year <- lme(AbovegroundTotal.Biomass..g.m.2 ~ Richness*MeanRankrecent10year_levels*CO2*Ntrt*year,random = ~1|Ring/Plot,correlation = corAR1(form = ~ 1 | Ring/Plot),data=e141_fin)
summary(modrecent10year)$tTable
Anova(modrecent10year)
modrecent10year <- lme(AbovegroundTotal.Biomass..g.m.2 ~ Richness*MeanRankrecent10year*CO2*Ntrt*year,random = ~1|Ring/Plot,correlation = corAR1(form = ~ 1 | Ring/Plot),data=e141_fin)
summary(modrecent10year)$tTable
Anova(modrecent10year)
library(HyperProc)
ortho_fun
install.packages("tensorflow")
library(tensorflow)
install_tensorflow()
#install tensorflow
install_tensorflow(version="1.14")
library(MLWIC)
# setup(python_loc="/Users/cowl0037/venv/bin/python",conda_loc = )
# setup(python_loc = "/anaconda3/envs/tensor")
setup(python_loc = "/Users/cowl0037/opt/miniconda3/",conda_loc = "auto")
setup(python_loc = "")
###Calculating metrics: average event size, number of events, consecutive dry days, consecutive wet days, total precip
###Time periods: hydrologic year (Sep previous - Aug current), May, June, July, August, May-August
###JMC 12Jan2016 changes: hydrologic year changing to Sep previous to July current -- to avoid the month during which harvesting occurred
### JMC 20Mar2016 changes: Growing season (April-July)
###Definitions:
##average event size: average daily precip for days with >0mm
##number of events: number of days with precip >0mm
##consecutive dry days: average number of days of the dry period between precipitation events
##consecutive wet days: average number of consecutive days with preip >0mm
##total precip: total cumulative precip when precip >0mm
###Note: Knapp et al. 2015 set their minimum rainfall amount to 0.3 mm because that was the strictest limitation in resolution by one of their sites. Our minimum is 0.254 mm, which isn't too far off anyway
##Clear all existing data
rm(list=ls())
##Load libraries
library(plyr)
library(weathermetrics)
##Set working directory
setwd("~/Dropbox/CDRSynth") #r
##Import data
daily<-read.csv("spei and precip data/e080_Daily climate summary.csv")
##Make date column a date
daily$Date<-as.Date(daily$Date,"%m/%d/%y")
#get rid of dates in the future
daily$Date<-as.Date(ifelse(daily$Date>Sys.Date(),format(daily$Date,"19%y-%m-%d"),format(daily$Date)))
daily$Year <- as.numeric(format(daily$Date,'%Y'))
daily$Month <- as.numeric(format(daily$Date,'%m'))
dailyrel <- daily[daily$Year<2015,c("Date","Year","Month","Precip.inches.")]
daily15<-read.csv("spei and precip data/2015 Daily precip corrected.csv")
daily15$Date<-as.Date(daily15$Date,"%m/%d/%y")
daily15$Year <- as.numeric(format(daily15$Date,'%Y'))
daily15$Month <- as.numeric(format(daily15$Date,'%m'))
daily15$Precip.inches. <- daily15$Precip.in.
daily15<- daily15[,c("Date","Year","Month","Precip.inches.")]
daily16.19 <- read.csv("spei and precip data/2016-2019 Daily precip corrected.csv")
daily16.19$Date<-as.Date(daily16.19$Date,"%m/%d/%y")
daily16.19$Year <- as.numeric(format(daily16.19$Date,'%Y'))
daily16.19$Month <- as.numeric(format(daily16.19$Date,'%m'))
daily16.19$Precip.inches. <- daily16.19$Precip.in.
daily16.19 <- daily16.19[,c("Date","Year","Month","Precip.inches.")]
dailycor <- rbind(daily15,daily16.19)
daily <- rbind(dailyrel,dailycor)
daily$Precip.mm. <- inches_to_metric(daily$Precip.inches.,"mm",round = 2)
tapply(daily$Precip.mm.,daily$Year,sum)
##Hydrologic year metrics
#Most metrics
GSyearMetrics<-ddply(daily,.(Year),summarise,total_precip_mm=sum(Precip.mm.))
##Hydrologic year metrics
#Most metrics
yearMetrics<-ddply(daily,.(Year),summarise,total_precip_mm=sum(Precip.mm.))
yearMetrics
names(daily)
dailyrel
##Import data
daily<-read.csv("spei and precip data/e080_Daily climate summary.csv")
##Make date column a date
daily$Date<-as.Date(daily$Date,"%m/%d/%y")
#get rid of dates in the future
daily$Date<-as.Date(ifelse(daily$Date>Sys.Date(),format(daily$Date,"19%y-%m-%d"),format(daily$Date)))
daily$Year <- as.numeric(format(daily$Date,'%Y'))
daily$Month <- as.numeric(format(daily$Date,'%m'))
dailyrel <- daily[daily$Year<2015,c("Date","Year","Month","Precip.inches.")]
names(daily)
#daily$Month <- as.character(format(daily$Date,'%B'))
daily$MeanTemp <- (daily$MaxTemp.degF.+daily$MinTemp.degF.)/2
daily$MeanTemp
##Hydrologic year metrics
#Most metrics
yearMetrics<-ddply(daily,.(Year),summarise,total_precip_mm=sum(Precip.mm.))
meantemp <- ddply(daily,.(Year),summarise,MeanTemp=mean(MeanTemp))
meantemp
dailyrel <- daily[daily$Year<2015,c("Date","Year","Month","Precip.inches.")]
daily15<-read.csv("spei and precip data/2015 Daily precip corrected.csv")
daily15$Date<-as.Date(daily15$Date,"%m/%d/%y")
#get rid of dates in the future
daily15$Year <- as.numeric(format(daily15$Date,'%Y'))
daily15$Month <- as.numeric(format(daily15$Date,'%m'))
daily15$Precip.inches. <- daily15$Precip.in.
daily15<- daily15[,c("Date","Year","Month","Precip.inches.")]
daily16.19 <- read.csv("spei and precip data/2016-2019 Daily precip corrected.csv")
daily16.19$Date<-as.Date(daily16.19$Date,"%m/%d/%y")
#get rid of dates in the future
daily16.19$Year <- as.numeric(format(daily16.19$Date,'%Y'))
daily16.19$Month <- as.numeric(format(daily16.19$Date,'%m'))
daily16.19$Precip.inches. <- daily16.19$Precip.in.
daily16.19 <- daily16.19[,c("Date","Year","Month","Precip.inches.")]
dailycor <- rbind(daily15,daily16.19)
daily2 <- rbind(dailyrel,dailycor)
daily2$Precip.mm. <- inches_to_metric(daily2$Precip.inches.,"mm",round = 2)
tapply(daily2$Precip.mm.,daily2$Year,sum)
##Define GS year of -- April-July
daily2$GSyear<-with(daily2,ifelse(Month %in% c(4:7),Year,NA)) ###JMC: Now should just be April-July
daily2 <- daily2[!is.na(daily2$GSyear),]
##Hydrologic year metrics
#Most metrics
yearMetrics<-ddply(daily2,.(Year),summarise,total_precip_mm=sum(Precip.mm.))
monthlyMetrics<-ddply(daily2,.(Year,Month),summarise,total_precip_mm=sum(Precip.mm.))
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="1"])
monthlyMetrics$Month
daily2 <- rbind(dailyrel,dailycor)
daily2$Precip.mm. <- inches_to_metric(daily2$Precip.inches.,"mm",round = 2)
tapply(daily2$Precip.mm.,daily2$Year,sum)
##Define GS year of -- April-July
# daily2$GSyear<-with(daily2,ifelse(Month %in% c(4:7),Year,NA)) ###JMC: Now should just be April-July
# daily2 <- daily2[!is.na(daily2$GSyear),]
##Hydrologic year metrics
#Most metrics
yearMetrics<-ddply(daily2,.(Year),summarise,total_precip_mm=sum(Precip.mm.))
monthlyMetrics<-ddply(daily2,.(Year,Month),summarise,total_precip_mm=sum(Precip.mm.))
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="1"])
monthlyMetrics$Month
yearMetrics <- yearMetrics(!is.na(yearMetrics$Year))
yearMetrics <- yearMetrics[!is.na(yearMetrics$Year),]
yearMetrics
monthlyMetrics <- monthlyMetrics[!is.na(monthlyMetrics$Year),]
##Define GS year of -- April-July
# daily2$GSyear<-with(daily2,ifelse(Month %in% c(4:7),Year,NA)) ###JMC: Now should just be April-July
# daily2 <- daily2[!is.na(daily2$GSyear),]
##Hydrologic year metrics
#Most metrics
yearMetrics<-ddply(daily2,.(Year),summarise,total_precip_mm=sum(Precip.mm.))
yearMetrics <- yearMetrics[!is.na(yearMetrics$Year),]
monthlyMetrics<-ddply(daily2,.(Year,Month),summarise,total_precip_mm=sum(Precip.mm.))
monthlyMetrics <- monthlyMetrics[!is.na(monthlyMetrics$Year),]
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="1"])
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="1"&monthlyMetrics$Year%in%c(1984:2018)])
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="7"&monthlyMetrics$Year%in%c(1984:2018)])
annualmeantemp <- ddply(daily,.(Year),summarise,MeanTemp=mean(MeanTemp))
monthlymeantemp <- ddply(daily,.(Year,Month),summarise,MeanTemp=mean(MeanTemp))
mean(monthlymeantemp$MeanTemp[monthlymeantemp$Month=="1"&monthlymeantemp$Year%in%c(1984:2018)])
mean(monthlymeantemp$MeanTemp[monthlymeantemp$Month=="7"&monthlymeantemp$Year%in%c(1984:2018)])
mean(annualmeantemp$MeanTemp)
mean(annualmeantemp$MeanTemp[monthlymeantemp$Year%in%c(1984:2018)])
mean(annualmeantemp$MeanTemp[annualmeantemp$Year%in%c(1984:2018)])
mean(yearMetrics$total_precip_mm[yearMetrics$Year%in%c(1984:2018)])
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="1"&monthlyMetrics$Year%in%c(1984:2018)])
mean(monthlyMetrics$total_precip_mm[monthlyMetrics$Month=="7"&monthlyMetrics$Year%in%c(1984:2018)])
(mean(annualmeantemp$MeanTemp[annualmeantemp$Year%in%c(1984:2018)])-32)*(5/9)
(mean(annualmeantemp$MeanTemp[annualmeantemp$Year%in%c(1984:2018)])-32)*(5/9)
(mean(monthlymeantemp$MeanTemp[monthlymeantemp$Month=="1"&monthlymeantemp$Year%in%c(1984:2018)])-32)*(5/9)
(mean(monthlymeantemp$MeanTemp[monthlymeantemp$Month=="7"&monthlymeantemp$Year%in%c(1984:2018)])-32)*(5/9)
graphics.off()
library(plyr)
library(nlme)
library(lme4)
library(car)
library(ggplot2)
library(vegan)
library(gridExtra)
library(ggeffects)
library(effects)
library(brms)
##Set working directory
setwd("~/Dropbox/CDRSynth/") #r
GSBioDIV.154 <- read.csv("Processed Data/GSe120.154_clean.csv")
GSBioDIV.154 <- GSBioDIV.154[GSBioDIV.154$Month!=6,] #whoops I left June 2001 in there. No june data.
GSBioDIV.154$Plot <- as.factor(GSBioDIV.154$Plot)
GSBioDIV.154.bcy <- GSBioDIV.154[GSBioDIV.154$Year %in% c(1998:2015),]
GSBioDIV.154.bcy$Year <- factor(GSBioDIV.154.bcy$Year)
GSBioDIV.154$invCDD_Y <- -1*GSBioDIV.154$CDD_Y
GSBioDIV.154$scaletotal_precip_mm_Y<- scale(GSBioDIV.154$total_precip_mm_Y)
GSBioDIV.154$scalenum_events_Y<- scale(GSBioDIV.154$num_events_Y)
GSBioDIV.154$Precip_Level <- as.factor(ifelse(GSBioDIV.154$total_precip_mm_Y<=quantile(GSBioDIV.154$total_precip_mm_Y,1)&GSBioDIV.154$total_precip_mm_Y>quantile(GSBioDIV.154$total_precip_mm_Y,0.66),"High",ifelse(GSBioDIV.154$total_precip_mm_Y<=quantile(GSBioDIV.154$total_precip_mm_Y,0.66)&GSBioDIV.154$total_precip_mm_Y>quantile(GSBioDIV.154$total_precip_mm_Y,0.33),"Med","Low")))
GSBioDIV.154$scaletotal_precip_mm_Y<- scale(GSBioDIV.154$total_precip_mm_Y)
GSBioDIV.154 <- read.csv("Processed Data/GSe120.154_clean.csv")
GSBioDIV.154
GSBioDIV.154 <- GSBioDIV.154[GSBioDIV.154$Month!=6,] #whoops I left June 2001 in there. No june data.
GSBioDIV.154$Plot <- as.factor(GSBioDIV.154$Plot)
GSBioDIV.154.bcy <- GSBioDIV.154[GSBioDIV.154$Year %in% c(1998:2015),]
GSBioDIV.154.bcy$Year <- factor(GSBioDIV.154.bcy$Year)
GSBioDIV.154
GSBioDIV.154
GSBioDIV.154$Precip_Level <- as.factor(ifelse(GSBioDIV.154$total_precip_mm_Y<=quantile(GSBioDIV.154$total_precip_mm_Y,1)&GSBioDIV.154$total_precip_mm_Y>quantile(GSBioDIV.154$total_precip_mm_Y,0.66),"High",ifelse(GSBioDIV.154$total_precip_mm_Y<=quantile(GSBioDIV.154$total_precip_mm_Y,0.66)&GSBioDIV.154$total_precip_mm_Y>quantile(GSBioDIV.154$total_precip_mm_Y,0.33),"Med","Low")))
rm(list=ls())
graphics.off()
library(plyr)
library(nlme)
library(lme4)
library(car)
library(ggplot2)
library(vegan)
library(gridExtra)
library(ggeffects)
library(effects)
library(brms)
##Set working directory
setwd("~/Dropbox/CDRSynth/") #r
GSBioDIV.154 <- read.csv("Processed Data/GSe120.154_clean.csv")
GSBioDIV.154 <- GSBioDIV.154[GSBioDIV.154$Month!=6,] #whoops I left June 2001 in there. No june data.
GSBioDIV.154$Plot <- as.factor(GSBioDIV.154$Plot)
GSBioDIV.154.bcy <- GSBioDIV.154[GSBioDIV.154$Year %in% c(1998:2015),]
GSBioDIV.154.bcy$Year <- factor(GSBioDIV.154.bcy$Year)
GSBioDIV.154$scaletotal_precip_mm<- scale(GSBioDIV.154$total_precip_mm)
GSBioDIV.154$scaleSPEI_4<- scale(GSBioDIV.154$SPEI_4)
GSBioDIV.154$Precip_Level <- as.factor(ifelse(GSBioDIV.154$total_precip_mm<=quantile(GSBioDIV.154$total_precip_mm,1)&GSBioDIV.154$total_precip_mm>quantile(GSBioDIV.154$total_precip_mm,0.66),"High",ifelse(GSBioDIV.154$total_precip_mm<=quantile(GSBioDIV.154$total_precip_mm,0.66)&GSBioDIV.154$total_precip_mm>quantile(GSBioDIV.154$total_precip_mm,0.33),"Med","Low")))
GSBioDIV.154$Precip_Level <-factor(GSBioDIV.154$Precip_Level,levels=c("High","Med","Low"))
GSNAddExps <- read.csv("Processed Data/GSe1e2_clean.csv")
GSNAddExps$FieldExpPlot <- as.factor(GSNAddExps$FieldExpPlot)
GSNAddExps$scaletotal_precip_mm<- scale(GSNAddExps$total_precip_mm)
GSNAddExps$scaleSPEI_4<- scale(GSNAddExps$SPEI_4)
GSNAddExps$Precip_Level <- as.factor(ifelse(GSNAddExps$total_precip_mm<=quantile(GSNAddExps$total_precip_mm,1)&GSNAddExps$total_precip_mm>quantile(GSNAddExps$total_precip_mm,0.66),"High",ifelse(GSNAddExps$total_precip_mm<=quantile(GSNAddExps$total_precip_mm,0.66)&GSNAddExps$total_precip_mm>quantile(GSNAddExps$total_precip_mm,0.33),"Med","Low")))
GSNAddExps$Precip_Level <-factor(GSNAddExps$Precip_Level,levels=c("High","Med","Low"))
GSBioCON <- read.csv("Processed Data/GSe141_clean.csv")
GSBioCON$Plot <- as.factor(GSBioCON$Plot)
GSBioCON$Ring <- as.factor(GSBioCON$Ring)
GSBioCON$BURN <- as.factor(ifelse(GSBioCON$Year %in% c(2000, 2002, 2003, 2005, 2007, 2009, 2011, 2012, 2013:2017),"Burned","NotBurned"))
GSBioCON$scaletotal_precip_mm<- scale(GSBioCON$total_precip_mm)
GSBioCON$scaleSPEI_4<- scale(GSBioCON$SPEI_4)
GSBioCON$Precip_Level <- as.factor(ifelse(GSBioCON$total_precip_mm<=quantile(GSBioCON$total_precip_mm,1)&GSBioCON$total_precip_mm>quantile(GSBioCON$total_precip_mm,0.66),"High",ifelse(GSBioCON$total_precip_mm<=quantile(GSBioCON$total_precip_mm,0.66)&GSBioCON$total_precip_mm>quantile(GSBioCON$total_precip_mm,0.33),"Med","Low")))
GSBioCON$Precip_Level <-factor(GSBioCON$Precip_Level,levels=c("High","Med","Low"))
GSBioCON$SPEI_Level <- as.factor(ifelse(GSBioCON$SPEI_4<=quantile(GSBioCON$SPEI_4,1)&GSBioCON$SPEI_4>quantile(GSBioCON$SPEI_4,0.66),"High",ifelse(GSBioCON$SPEI_4<=quantile(GSBioCON$SPEI_4,0.66)&GSBioCON$SPEI_4>quantile(GSBioCON$SPEI_4,0.33),"Med","Low")))
GSBioCON$SPEI_Level <-factor(GSBioCON$SPEI_Level,levels=c("High","Med","Low"))
GSNAddExps$SPEI_Level <- as.factor(ifelse(GSNAddExps$SPEI_4<=quantile(GSNAddExps$SPEI_4,1)&GSNAddExps$SPEI_4>quantile(GSNAddExps$SPEI_4,0.66),"High",ifelse(GSNAddExps$SPEI_4<=quantile(GSNAddExps$SPEI_4,0.66)&GSNAddExps$SPEI_4>quantile(GSNAddExps$SPEI_4,0.33),"Med","Low")))
GSNAddExps$SPEI_Level <-factor(GSNAddExps$SPEI_Level,levels=c("High","Med","Low"))
GSBioDIV.154$SPEI_Level <- as.factor(ifelse(GSBioDIV.154$SPEI_4<=quantile(GSBioDIV.154$SPEI_4,1)&GSBioDIV.154$SPEI_4>quantile(GSBioDIV.154$SPEI_4,0.66),"High",ifelse(GSBioDIV.154$SPEI_4<=quantile(GSBioDIV.154$SPEI_4,0.66)&GSBioDIV.154$SPEI_4>quantile(GSBioDIV.154$SPEI_4,0.33),"Med","Low")))
GSBioDIV.154$SPEI_Level <-factor(GSBioDIV.154$SPEI_Level,levels=c("High","Med","Low"))
print("BioDIV tot");mod1 <- lme(sqrt(AGB)~logDiv * scaletotal_precip_mm + logDiv * ExpYear, random=~1|Plot,data=GSBioDIV.154,na.action=na.exclude,method="ML");summary(mod1);print("BioDIV tot");Anova(mod1,type="III")
sink(paste("output_",Sys.Date(),".txt",sep=""))
print("BioDIV tot");mod1 <- lme(sqrt(AGB)~logDiv * scaletotal_precip_mm + logDiv * ExpYear, random=~1|Plot,data=GSBioDIV.154,na.action=na.exclude,method="ML");summary(mod1);print("BioDIV tot");Anova(mod1,type="III")
print("BioDIV tot");mod1 <- lme(sqrt(AGB)~logDiv * scaletotal_precip_mm + logDiv * ExpYear, random=~1|Plot,data=GSBioDIV.154,na.action=na.exclude,method="ML");summary(mod1);print("BioDIV tot");Anova(mod1,type="III")
BioDIVtot.val <- coef(summary(mod1))[5,1]
sink()
sink(paste("output_",Sys.Date(),".txt",sep=""))
print("BioDIV tot");mod1 <- lme(sqrt(AGB)~logDiv * scaletotal_precip_mm + logDiv * ExpYear, random=~1|Plot,data=GSBioDIV.154,na.action=na.exclude,method="ML");summary(mod1);print("BioDIV tot");Anova(mod1,type="III")
print("BioDIV spei");mod2 <- lme(sqrt(AGB)~logDiv * scaleSPEI_4 + logDiv * ExpYear, random=~1|Plot,data=GSBioDIV.154,na.action=na.exclude,method="ML");summary(mod2);print("BioDIV spei");Anova(mod2,type="III")
print("e001 and e002 TOT");mod3 <- lme(sqrt(AGB)~Field+Experiment+NAdd * scaletotal_precip_mm + NAdd * ExpYear, random=~1|FieldExpPlot,data=GSNAddExps,na.action=na.exclude,method="ML");summary(mod3);print("e001 and e002 TOT");Anova(mod3,type="III")
print("e001 and e002 spei");mod4 <- lme(sqrt(AGB)~Field+Experiment+NAdd * scaleSPEI_4 + NAdd * ExpYear, random=~1|FieldExpPlot,data=GSNAddExps,na.action=na.exclude,method="ML");summary(mod4);print("e001 and e002 spei");Anova(mod4,type="III")
# with N*Year and div*year (n*div*year not significant (nor N*Div) so removed))
print("BioCON");mod5 <- lme(sqrt(AGB)~NTrt * scaletotal_precip_mm + logDiv * scaletotal_precip_mm + NTrt * ExpYear + logDiv * ExpYear ,random=~1|Ring/Plot,data=GSBioCON,na.action=na.exclude,method="ML");summary(mod5);print("BioCON");Anova(mod5,type="III")
print("BioCON");mod6 <- lme(sqrt(AGB)~NTrt * scaleSPEI_4 + logDiv * scaleSPEI_4 + NTrt * ExpYear + logDiv * ExpYear ,random=~1|Ring/Plot,data=GSBioCON,na.action=na.exclude,method="ML");summary(mod6);print("BioCON");Anova(mod6,type="III")
sink()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='janecd', token='F04A43C97D6B7914ECAC293C5606EBEF', secret='jB6vvbd5H30pSoWseqFnGbtudpTOGmAxmFmgLtEA')
library(rsconnect)
install.packages("shiny")
library(ggplot2)
library(shiny)
#set working directory
setwd("~/Dropbox/UMN Postdoc/TeRaBio")
### general packages that I use often
library(plyr)
library(nlme)
library(lme4)
library(car)
library(ggplot2)
library(vegan)
library(readxl)
library(data.table)
library(tidyr)
library(gridExtra)
library(RColorBrewer)
#e249
bac <- read.csv("2015MegaE249.csv")
str(bac)
#no 2007 (pretreatment), no june harvests, no 32/34 sp plots
bacfin<- bac[bac$Year>2007&bac$Month>6&bac$NumSp<30,]
# numerican heat
bacfin$HeatNum[bacfin$Heat.Treatment=="Control"]<-0
bacfin$HeatNum[bacfin$Heat.Treatment=="Low"]<-1.5
bacfin$HeatNum[bacfin$Heat.Treatment=="High"]<-3
#ordered heat
bacfin$HeatOrd <- ordered(bacfin$Heat.Treatment,c("Control","Low","High"))
#Experimental Year
bacfin$YearNum <- bacfin$Year-2008
#For random effects
#plot
bacfin$Plot<-as.factor(bacfin$Plot)
bacfin$SubPlot<-as.factor(paste0(bacfin$Plot,bacfin$HeatNum))
bactrt <- read.csv("E249 Treatment Summary.csv")
bactrt<- bactrt[bactrt$NumSp<30,]
bactrt$Plot <- as.factor(bactrt$Plot.No.)
bacfin <- merge(bacfin,bactrt,by="Plot")
bacfin$plantedinplot.Achmi <- bacfin$Achillea.millefolium.lanulosa. * bacfin$Achmi
bacfin$plantedinplot.Agrsm <- bacfin$Agropyron.smithii * bacfin$Agrsm
bacfin$plantedinplot.Amoca <- bacfin$Amorpha.canescens * bacfin$AmoPet
bacfin$plantedinplot.Andge <- bacfin$Andropogon.gerardi * bacfin$Andge
bacfin$plantedinplot.Asctu <- bacfin$Asclepias.tuberosa * bacfin$Asctu
bacfin$plantedinplot.Elyca <- bacfin$Elymus.canadensis * bacfin$Elyca
bacfin$plantedinplot.Koecr <- bacfin$Koeleria.cristata * bacfin$Koecr
bacfin$plantedinplot.Lesca <- bacfin$Lespedeza.capitata * bacfin$Lesca
bacfin$plantedinplot.Liaas <- bacfin$Liatris.aspera * bacfin$Liaas
bacfin$plantedinplot.Luppe <- bacfin$Lupinus.perennis * bacfin$Luppe
bacfin$plantedinplot.Monfi <- bacfin$Monarda.fistulosa * bacfin$MonSol
bacfin$plantedinplot.Panvi <- bacfin$Panicum.virgatum * bacfin$Panvi
bacfin$plantedinplot.Petpu <- bacfin$Petalostemum.purpureum * bacfin$Petpu
bacfin$plantedinplot.Poapr <- bacfin$Poa.pratensis * bacfin$Poapr
bacfin$plantedinplot.Schsc <- bacfin$Schizachyrium.scoparium * bacfin$Schsc
bacfin$plantedinplot.Solri <- bacfin$Solidago.rigida * bacfin$MonSol
bacfin$plantedinplot.Sornu <- bacfin$Sorghastrum.nutans * bacfin$Sornu
pipnames <- colnames(bacfin)[grep("plantedinplot",colnames(bacfin))]
bacfin$SR.plantedspecies <- rowSums(bacfin[,names(bacfin)%in%colnames(bacfin)[grep("plantedinplot",colnames(bacfin))]]>0)
bacfin$DivTrt <- bacfin$NumSp.x
ggplot(bacfin,aes(DivTrt,SR.plantedspecies,color=HeatOrd,group=HeatOrd))+facet_wrap(facets = "Year")+geom_point()+geom_line(stat="summary")+scale_color_manual(values=c("blue","orange","red"))
names(bacfin)
names(bacfin[,c(1,3,125:128,154:172))
names(bacfin[,c(1,3,125:128,154:172)])
names(bacfin[,c(1,3,10,12,,125:128,154:172)])
names(bacfin[,c(1,3,10,12,125:128,154:172)])
names(bacfin[,c(1,3,172,10,12,171,125:128,154:170)])
write.csv(bacfin[,c(1,3,172,10,12,171,125:128,154:170)],"~/Desktop/BAC_df.csv")
write.csv(bacfin[,c(1,3,172,10,12,171,125:128)],"~/Desktop/BAC_df.csv")
write.csv(bacfin[,c(1,3,172,10,12,171,125:127)],"~/Desktop/BAC_df.csv")
runApp('~/Desktop/Shiny/GlobalChange')
getwd()
bac <- bacfin[,c(1,3,172,10,12,171,125:127)]
bac <- read.csv("bac_df.csv")
setwd("~/Shiny/GlobalChange")
setwd("~/Desktop/Shiny/GlobalChange")
bac <- read.csv("bac_df.csv")
names(bac)
runApp()
library(ggplot2)
runApp()
runApp()
runApp()
runApp()
input$radio
runApp()
runApp()
runApp()
names(bac)
# draw the plot at the specified diversity level
# plot(bac$TotalAbovegroundBiomass.g.m2.[bac$DivTrt==input$radio]~bac$HeatNum[bac$DivTrt==input$radio])
ggplot(bac[bac$DivTrt==input$radio],aes(bac$HeatNum,bac$TotalAbovegroundBiomass.g.m2.))+geom_point(stat="summary")+geom_line(stat="summary")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(bac)
### JANE M COWLES
### Checking on SR and model structure
#set working directory
setwd("~/Dropbox/UMN Postdoc/TeRaBio")
### general packages that I use often
library(plyr)
library(nlme)
library(lme4)
library(car)
library(ggplot2)
library(vegan)
library(readxl)
library(data.table)
library(tidyr)
library(gridExtra)
library(RColorBrewer)
#e249
bac <- read.csv("2015MegaE249.csv")
str(bac)
#no 2007 (pretreatment), no june harvests, no 32/34 sp plots
bacfin<- bac[bac$Year>2007&bac$Month>6&bac$NumSp<30,]
# numerican heat
bacfin$HeatNum[bacfin$Heat.Treatment=="Control"]<-1
bacfin$HeatNum[bacfin$Heat.Treatment=="Low"]<-2
bacfin$HeatNum[bacfin$Heat.Treatment=="High"]<-3
#ordered heat
bacfin$HeatOrd <- ordered(bacfin$Heat.Treatment,c("Control","Low","High"))
#Experimental Year
bacfin$YearNum <- bacfin$Year-2008
#For random effects
#plot
bacfin$Plot<-as.factor(bacfin$Plot)
bacfin$SubPlot<-as.factor(paste0(bacfin$Plot,bacfin$HeatNum))
bactrt <- read.csv("E249 Treatment Summary.csv")
bactrt<- bactrt[bactrt$NumSp<30,]
bactrt$Plot <- as.factor(bactrt$Plot.No.)
bacfin <- merge(bacfin,bactrt,by="Plot")
bacfin$plantedinplot.Achmi <- bacfin$Achillea.millefolium.lanulosa. * bacfin$Achmi
bacfin$plantedinplot.Agrsm <- bacfin$Agropyron.smithii * bacfin$Agrsm
bacfin$plantedinplot.Amoca <- bacfin$Amorpha.canescens * bacfin$AmoPet
bacfin$plantedinplot.Andge <- bacfin$Andropogon.gerardi * bacfin$Andge
bacfin$plantedinplot.Asctu <- bacfin$Asclepias.tuberosa * bacfin$Asctu
bacfin$plantedinplot.Elyca <- bacfin$Elymus.canadensis * bacfin$Elyca
bacfin$plantedinplot.Koecr <- bacfin$Koeleria.cristata * bacfin$Koecr
bacfin$plantedinplot.Lesca <- bacfin$Lespedeza.capitata * bacfin$Lesca
bacfin$plantedinplot.Liaas <- bacfin$Liatris.aspera * bacfin$Liaas
bacfin$plantedinplot.Luppe <- bacfin$Lupinus.perennis * bacfin$Luppe
bacfin$plantedinplot.Monfi <- bacfin$Monarda.fistulosa * bacfin$MonSol
bacfin$plantedinplot.Panvi <- bacfin$Panicum.virgatum * bacfin$Panvi
bacfin$plantedinplot.Petpu <- bacfin$Petalostemum.purpureum * bacfin$Petpu
bacfin$plantedinplot.Poapr <- bacfin$Poa.pratensis * bacfin$Poapr
bacfin$plantedinplot.Schsc <- bacfin$Schizachyrium.scoparium * bacfin$Schsc
bacfin$plantedinplot.Solri <- bacfin$Solidago.rigida * bacfin$MonSol
bacfin$plantedinplot.Sornu <- bacfin$Sorghastrum.nutans * bacfin$Sornu
pipnames <- colnames(bacfin)[grep("plantedinplot",colnames(bacfin))]
bacfin$SR.plantedspecies <- rowSums(bacfin[,names(bacfin)%in%colnames(bacfin)[grep("plantedinplot",colnames(bacfin))]]>0)
bacfin$DivTrt <- bacfin$NumSp.x
ggplot(bacfin,aes(DivTrt,SR.plantedspecies,color=HeatOrd,group=HeatOrd))+facet_wrap(facets = "Year")+geom_point()+geom_line(stat="summary")+scale_color_manual(values=c("blue","orange","red"))
bac <- bacfin[,c(1,3,172,10,12,171,125:127)]
write.csv(bacfin[,c(1,3,172,10,12,171,125:127)],"~/Desktop/BAC_df.csv")
bac <- read.csv("bac_df.csv")
bac <- read.csv("bac_df.csv")
setwd("~/Desktop")
runApp('Shiny/GlobalChange')
bacfin[,c(1,3,172,10,12,171,125:127)]
names(bacfin)
bacfin$Productivity <- bacfin$TotalAbovegroundBiomass.g.m2.
names(bacfin)
bacfin$Diversity <- bacfin$DivTrt
names(bacfin[,c(1,3,174,10,173,171,125:127)])
write.csv(bacfin[,c(1,3,172,10,12,171,125:127)],"~/Desktop/Shiny/GlobalChange/BAC_df.csv")
write.csv(bacfin[,c(1,3,174,10,173,171,125:127)],"~/Desktop/Shiny/GlobalChange/BAC_df.csv")
rm(list=ls())
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
names(bac)
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
ggplot(bac[bac$HeatNum%in%input$checkGroup,],aes(Diversity,Productivity,group=factor(HeatOrd,levels=c("Control","Low","High")),color=factor(HeatOrd,levels=c("Control","Low","High"))))+geom_point(stat="summary")+geom_line(stat="summary")+scale_color_manual(values=c("blue","orange","red"),drop=F)+labs(legend="hi")
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
?img
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
runApp('Shiny/GlobalChange')
getwd()
rsconnect::deployApp('~/Desktop/Shiny/GlobalChange')
rsconnect::deployApp('~/Desktop/Shiny/GlobalChange')
rsconnect::deployApp('~/Desktop/Shiny/GlobalChange')
rsconnect::deployApp('~/Desktop/Shiny/GlobalChange')
getwd()
rsconnect::deployApp('/Users/cowl0037/Desktop/Shiny/GlobalChange')
rsconnect::deployApp('/Users/cowl0037/Desktop/Shiny/GlobalChange')
showLogs()
rsconnect::deployApp('/Users/cowl0037/Desktop/Shiny/GlobalChange')
# rsconnect::deployApp('~/Desktop/Shiny/GlobalChange')
rsconnect::deployApp()
setwd("/Users/cowl0037/Desktop/Shiny/GlobalChange")
getwd()
list.files()
# rsconnect::deployApp('~/Desktop/Shiny/GlobalChange')
rsconnect::deployApp()
rsconnect::deployApp('/Users/cowl0037/Desktop/Shiny/GlobalChange')
runApp()
